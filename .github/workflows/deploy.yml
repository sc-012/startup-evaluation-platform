name: Deploy to Google Cloud Platform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: startup-evaluator-backend

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker
      run: gcloud auth configure-docker

    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME ./backend
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --memory 4Gi \
          --cpu 2 \
          --timeout 600 \
          --set-env-vars PROJECT_ID=$PROJECT_ID,REGION=$REGION,DATASET_ID=startup_evaluation \
          --service-account startup-evaluator@$PROJECT_ID.iam.gserviceaccount.com

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Build React app
      run: |
        cd frontend
        npm run build
      env:
        REACT_APP_MCP_SERVER_URL: ${{ secrets.BACKEND_URL }}

    - name: Deploy to Firebase Hosting
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        channelId: live
        projectId: ${{ secrets.GCP_PROJECT_ID }}
